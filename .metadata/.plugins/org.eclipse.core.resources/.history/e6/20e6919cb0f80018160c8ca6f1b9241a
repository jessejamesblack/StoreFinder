package com.example.demo;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.google.gson.Gson;
import com.google.gson.JsonObject;

@RestController
public class webhook {
	
	// Test Get method
//	@RequestMapping(method = RequestMethod.GET)
//	public String index() {
//		return "Hello";
//	}

	// Make post request to Dialogflow
	@PostMapping("/locate")
	public String getPwnedStatus(@RequestBody String payload) {
		// Get the fulfillment request JSON from Dialogflow
		Gson gson = new Gson();
		JsonParse jp = gson.fromJson(payload, JsonParse.class);		
		
		// Get the response from pwned Dialogflow intent
		if(jp.queryResult.action.equals("input.breach")) {
			// Set up the url
			String location = jp.queryResult.parameters.any;
			
			System.out.println(location);
			String url = "https://maps.googleapis.com/maps/api/place/textsearch/json?query=verizon+stores+in+"+ location+"&key=AIzaSyCLxbkVfza9_-cbIf6AUzQGnpC0Vhbsxzc";
	
			// Setup the API call to haveibeenpwned 
			final String uri = url;
			HttpHeaders headers = new HttpHeaders();
			headers.add("User-Agent", uri);
			RestTemplate restTemplate = new RestTemplate();
			HttpEntity<String> request = new HttpEntity<String>(headers);
			ResponseEntity<String> response = restTemplate.exchange(uri, HttpMethod.GET, request, String.class);
			
			String res = response.getBody();
			
			//System.out.println(res);
			// Return to Dialogflow
			JsonObject chatConvert = new JsonObject();
			LocationData ld = gson.fromJson(res, LocationData.class);
			
			String address = ld.results[0].formatted_address;
			String address2 = "";
			String address3 = "";
			if(ld.results.length > 2) {
				address2 = ld.results[1].formatted_address;
				address3 = ld.results[2].formatted_address;
			}
			
			System.out.println(address + " " + address2 + " " + address3);
			
			
			chatConvert.addProperty("fulfillmentText", address + " " + address2 + " " + address3);
			String responsePayload = gson.toJson(chatConvert);
			return responsePayload;
		}
		else {
			return "Error has occured";
		}
		
		
	}
}
